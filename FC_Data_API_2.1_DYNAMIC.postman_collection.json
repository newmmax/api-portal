{
  "info": {
    "_postman_id": "fc-data-api-collection-v2-dynamic",
    "name": "FC Data API 2.1 - Sistema Completo + Dynamic Query",
    "description": "Cole√ß√£o COMPLETA e ATUALIZADA para FC Data API - Sistema integrado PostgreSQL + Portal + Protheus + Analytics + Pedidos + NOVO: Query Din√¢mica inspirada na Rapido-SQL que resolve SELECT *, CTEs, CASE complexos e JOINs din√¢micos!",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "fc-data-api-v2-dynamic",
    "version": "2.1.0"
  },
  "item": [
    {
      "name": "üîê Autentica√ß√£o",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Capturar token automaticamente",
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.token) {",
                  "        pm.collectionVariables.set(\"token\", jsonData.token);",
                  "        pm.environment.set(\"token\", jsonData.token);",
                  "        console.log(\"üéØ Token JWT salvo:\", jsonData.token.substring(0, 20) + \"...\");",
                  "        console.log(\"‚è∞ Expira em:\", jsonData.expires_in + \" segundos\");",
                  "    }",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.expect(jsonData).to.have.property('expires_in');",
                  "    pm.expect(jsonData).to.have.property('token_type');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"ArtesanalFC2025!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "üîë Autentica√ß√£o JWT - Token v√°lido por 24 horas"
          }
        },
        {
          "name": "Validar Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/validate",
              "host": ["{{base_url}}"],
              "path": ["auth", "validate"]
            },
            "description": "‚úÖ Validar token JWT ativo"
          }
        }
      ]
    },
    {
      "name": "üìä Data FC (PostgreSQL)",
      "item": [
        {
          "name": "Vendas - Query Principal",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/data/vendas?data_inicio=2024-01-01&data_fim=2025-12-31&limite=10",
              "host": ["{{base_url}}"],
              "path": ["data", "vendas"],
              "query": [
                {
                  "key": "data_inicio",
                  "value": "2024-01-01",
                  "description": "Data inicial (YYYY-MM-DD)"
                },
                {
                  "key": "data_fim",
                  "value": "2025-12-31",
                  "description": "Data final (YYYY-MM-DD)"
                },
                {
                  "key": "limite",
                  "value": "10",
                  "description": "M√°ximo de registros"
                },
                {
                  "key": "empresa",
                  "value": "",
                  "description": "Filtrar por empresa",
                  "disabled": true
                },
                {
                  "key": "filial",
                  "value": "",
                  "description": "C√≥digo da filial",
                  "disabled": true
                },
                {
                  "key": "vendedor",
                  "value": "",
                  "description": "C√≥digo do vendedor",
                  "disabled": true
                },
                {
                  "key": "produto",
                  "value": "",
                  "description": "Nome do produto (ILIKE)",
                  "disabled": true
                }
              ]
            },
            "description": "üìà Query principal - Dados de vendas com JOIN de 7 tabelas"
          }
        },
        {
          "name": "Vendas Detalhadas",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/data/vendas/detalhes?limite=5",
              "host": ["{{base_url}}"],
              "path": ["data", "vendas", "detalhes"],
              "query": [
                {
                  "key": "limite",
                  "value": "5"
                }
              ]
            },
            "description": "üîç Vendas com detalhes completos"
          }
        },
        {
          "name": "Query Customizada",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"SELECT COUNT(*) as total_vendas, SUM(CAST(vrrcb as numeric)) as valor_total FROM fc14100 WHERE itemid IS NOT NULL LIMIT 10\",\n  \"params\": []\n}"
            },
            "url": {
              "raw": "{{base_url}}/data/query",
              "host": ["{{base_url}}"],
              "path": ["data", "query"]
            },
            "description": "üõ†Ô∏è Executar SQL customizado no PostgreSQL FC"
          }
        },
        {
          "name": "üöÄ Query Din√¢mica (NEW!)",
          "item": [
            {
              "name": "SELECT * B√°sico",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Response has dynamic structure\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData).to.have.property('success');",
                      "    pm.expect(jsonData).to.have.property('data');",
                      "    pm.expect(jsonData).to.have.property('query_type');",
                      "    pm.expect(jsonData.query_type).to.eql('dynamic');",
                      "    pm.expect(jsonData).to.have.property('columns');",
                      "    pm.expect(jsonData).to.have.property('stats');",
                      "});",
                      "",
                      "pm.test(\"Data contains records\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data).to.be.an('array');",
                      "    if (jsonData.count > 0) {",
                      "        pm.expect(jsonData.data.length).to.be.above(0);",
                      "    }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"SELECT * FROM fc14000 LIMIT 5\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/data/query-dynamic",
                  "host": ["{{base_url}}"],
                  "path": ["data", "query-dynamic"]
                },
                "description": "‚≠ê FINALMENTE FUNCIONA! SELECT * com detec√ß√£o din√¢mica de tipos"
              }
            },
            {
              "name": "WITH (CTE) Complexa",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"CTE query successful\", function () {",
                      "    pm.response.to.have.status(200);",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.be.true;",
                      "    pm.expect(jsonData.query_type).to.eql('dynamic');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"WITH vendas_mes AS (\\n    SELECT \\n        companygroupname, \\n        COUNT(*) as total_vendas,\\n        AVG(CASE WHEN cdfunre IS NOT NULL THEN 1.0 ELSE 0.0 END) as tem_vendedor\\n    FROM fc14000 \\n    WHERE dtpagefe >= '2024-01-01'\\n    GROUP BY companygroupname\\n)\\nSELECT \\n    companygroupname,\\n    total_vendas,\\n    ROUND(tem_vendedor * 100, 2) as perc_vendedor,\\n    CASE \\n        WHEN total_vendas > 100 THEN 'Alto Volume'\\n        WHEN total_vendas > 50 THEN 'M√©dio Volume'\\n        ELSE 'Baixo Volume'\\n    END AS classificacao\\nFROM vendas_mes\\nORDER BY total_vendas DESC\\nLIMIT 10\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/data/query-dynamic",
                  "host": ["{{base_url}}"],
                  "path": ["data", "query-dynamic"]
                },
                "description": "üéØ CTE com CASE complexo - imposs√≠vel no endpoint original!"
              }
            },
            {
              "name": "JOIN Din√¢mico Multi-Tabela",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"SELECT \\n    c.companygroupname,\\n    c.cnpj,\\n    c.nrcpm,\\n    c.dtpagefe,\\n    i.itemid,\\n    i.cdpro,\\n    p.descrprd,\\n    i.quant,\\n    ROUND(CAST(i.pruni as numeric), 2) as preco_unitario,\\n    ROUND(CAST(i.vrtot as numeric), 2) as valor_total,\\n    CASE \\n        WHEN CAST(i.vrtot as numeric) > 100 THEN 'Alto Valor'\\n        WHEN CAST(i.vrtot as numeric) > 50 THEN 'M√©dio Valor'\\n        ELSE 'Baixo Valor'\\n    END as categoria_valor\\nFROM fc14000 c\\nINNER JOIN fc14100 i ON \\n    c.company_id = i.company_id \\n    AND c.cdfil = i.cdfil \\n    AND c.nrcpm = i.nrcpm\\nLEFT JOIN fc03000 p ON \\n    i.company_id = p.company_id \\n    AND i.cdpro = p.cdpro\\nWHERE c.dtpagefe >= '2025-01-01'\\nORDER BY c.dtpagefe DESC, CAST(i.vrtot as numeric) DESC\\nLIMIT 15\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/data/query-dynamic",
                  "host": ["{{base_url}}"],
                  "path": ["data", "query-dynamic"]
                },
                "description": "üîó JOIN din√¢mico entre 3 tabelas com CASE - detec√ß√£o autom√°tica de tipos!"
              }
            },
            {
              "name": "Agrega√ß√µes e Subqueries",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"SELECT \\n    companygroupname,\\n    COUNT(*) as total_cupons,\\n    COUNT(DISTINCT cdfil) as filiais_ativas,\\n    COUNT(DISTINCT cdcli) as clientes_unicos,\\n    MIN(dtpagefe) as primeira_venda,\\n    MAX(dtpagefe) as ultima_venda,\\n    (\\n        SELECT COUNT(*)\\n        FROM fc14100 i\\n        WHERE i.company_id = c.company_id\\n    ) as total_itens_vendidos,\\n    CASE \\n        WHEN COUNT(*) > 500 THEN 'üî• Top Performer'\\n        WHEN COUNT(*) > 200 THEN 'üìà Alto Volume'\\n        WHEN COUNT(*) > 50 THEN 'üìä M√©dio Volume'\\n        ELSE 'üìâ Baixo Volume'\\n    END as performance_badge\\nFROM fc14000 c\\nWHERE dtpagefe >= '2024-01-01'\\nGROUP BY companygroupname, c.company_id\\nHAVING COUNT(*) > 10\\nORDER BY total_cupons DESC\\nLIMIT 10\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/data/query-dynamic",
                  "host": ["{{base_url}}"],
                  "path": ["data", "query-dynamic"]
                },
                "description": "üìä Agrega√ß√µes complexas com subqueries - an√°lise completa de vendas"
              }
            },
            {
              "name": "Teste de Tipos Diversos",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"SELECT \\n    'Teste de Tipos' as texto_string,\\n    42 as numero_inteiro,\\n    3.14159 as numero_decimal,\\n    true as booleano_verdadeiro,\\n    false as booleano_falso,\\n    CURRENT_DATE as data_atual,\\n    CURRENT_TIMESTAMP as timestamp_completo,\\n    NULL as valor_nulo,\\n    CAST('2025-12-25' as DATE) as data_especifica,\\n    CASE \\n        WHEN 1 = 1 THEN 'L√≥gica Verdadeira'\\n        ELSE 'Nunca vai aparecer'\\n    END as resultado_case\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/data/query-dynamic",
                  "host": ["{{base_url}}"],
                  "path": ["data", "query-dynamic"]
                },
                "description": "üß™ Teste de detec√ß√£o autom√°tica de todos os tipos PostgreSQL"
              }
            }
          ],
          "description": "üöÄ NOVA FUNCIONALIDADE: Query din√¢mica com detec√ß√£o autom√°tica de tipos. Resolve SELECT *, CTEs, CASE complexos e JOINs din√¢micos!",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "console.log('üöÄ Executando query din√¢mica...');",
                  "console.log('üí° Esta funcionalidade resolve os problemas de SELECT * e queries complexas!');"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üè¢ Portal (SQL Server)",
      "item": [
        {
          "name": "Listar Franqueados",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/portal/franqueados?limite=10",
              "host": ["{{base_url}}"],
              "path": ["portal", "franqueados"],
              "query": [
                {
                  "key": "limite",
                  "value": "10"
                }
              ]
            },
            "description": "üè™ Lista todos os franqueados ativos"
          }
        },
        {
          "name": "Buscar Franqueados",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/portal/franqueados/buscar?termo=nome_fantasia&limite=5",
              "host": ["{{base_url}}"],
              "path": ["portal", "franqueados", "buscar"],
              "query": [
                {
                  "key": "termo",
                  "value": "nome_fantasia",
                  "description": "Busca por nome ou raz√£o social"
                },
                {
                  "key": "limite",
                  "value": "5"
                }
              ]
            },
            "description": "üîç Buscar franqueados por termo"
          }
        },
        {
          "name": "Franqueado por CNPJ",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/portal/franqueados/12345678000123",
              "host": ["{{base_url}}"],
              "path": ["portal", "franqueados", "12345678000123"]
            },
            "description": "üéØ Buscar franqueado espec√≠fico por CNPJ"
          }
        },
        {
          "name": "Produto por C√≥digo",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/portal/produtos/12345",
              "host": ["{{base_url}}"],
              "path": ["portal", "produtos", "12345"]
            },
            "description": "üì¶ Buscar produto espec√≠fico por c√≥digo"
          }
        },
        {
          "name": "Buscar Produtos",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/portal/produtos/buscar?termo=dipirona&limite=10",
              "host": ["{{base_url}}"],
              "path": ["portal", "produtos", "buscar"],
              "query": [
                {
                  "key": "termo",
                  "value": "dipirona",
                  "description": "Nome do produto"
                },
                {
                  "key": "limite",
                  "value": "10"
                }
              ]
            },
            "description": "üîç Buscar produtos por nome"
          }
        },
        {
          "name": "Query Portal Customizada",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"SELECT TOP 5 cnpj, nome_fantasia FROM franqueados WHERE ativo = 1\",\n  \"params\": []\n}"
            },
            "url": {
              "raw": "{{base_url}}/portal/query",
              "host": ["{{base_url}}"],
              "path": ["portal", "query"]
            },
            "description": "üõ†Ô∏è SQL customizado no Portal"
          }
        }
      ]
    },
    {
      "name": "‚öôÔ∏è Protheus (SQL Server)",
      "item": [
        {
          "name": "Query Protheus",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"SELECT TOP 10 * FROM SA1010 WHERE A1_MSBLQL != '1'\",\n  \"params\": []\n}"
            },
            "url": {
              "raw": "{{base_url}}/protheus/query",
              "host": ["{{base_url}}"],
              "path": ["protheus", "query"]
            },
            "description": "üõ†Ô∏è Query no sistema Protheus"
          }
        },
        {
          "name": "Status Pedido Protheus",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/protheus/pedidos/123456/status",
              "host": ["{{base_url}}"],
              "path": ["protheus", "pedidos", "123456", "status"]
            },
            "description": "üìã Status de pedido no Protheus"
          }
        }
      ]
    },
    {
      "name": "üìà Analytics",
      "item": [
        {
          "name": "An√°lise Pedido - Oportunidades",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cnpj_cliente\": \"12345678000123\",\n  \"itens_pedido\": [\n    {\n      \"codigo_produto\": \"12345\",\n      \"quantidade\": 10,\n      \"preco_unitario\": 25.90\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/analytics/pedido/oportunidades",
              "host": ["{{base_url}}"],
              "path": ["analytics", "pedido", "oportunidades"]
            },
            "description": "üéØ Analisar oportunidades em pedidos"
          }
        },
        {
          "name": "Efetividade Sugest√µes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/efetividade-sugestoes?dias=30",
              "host": ["{{base_url}}"],
              "path": ["analytics", "efetividade-sugestoes"],
              "query": [
                {
                  "key": "dias",
                  "value": "30",
                  "description": "Per√≠odo de an√°lise"
                }
              ]
            },
            "description": "üìä Taxa de aceita√ß√£o de sugest√µes"
          }
        },
        {
          "name": "Exportar Relat√≥rio",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/recompra-inteligente/export?formato=excel",
              "host": ["{{base_url}}"],
              "path": ["analytics", "recompra-inteligente", "export"],
              "query": [
                {
                  "key": "formato",
                  "value": "excel",
                  "description": "excel ou csv"
                }
              ]
            },
            "description": "üìÅ Exportar relat√≥rios"
          }
        },
        {
          "name": "Recompra Inteligente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/recompra-inteligente?cnpj=12345678000123&dias=60",
              "host": ["{{base_url}}"],
              "path": ["analytics", "recompra-inteligente"],
              "query": [
                {
                  "key": "cnpj",
                  "value": "12345678000123"
                },
                {
                  "key": "dias",
                  "value": "60"
                }
              ]
            },
            "description": "üîÑ An√°lise de recompra de clientes"
          }
        },
        {
          "name": "Oportunidades Rede",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/analytics/oportunidades-rede?regiao=sudeste",
              "host": ["{{base_url}}"],
              "path": ["analytics", "oportunidades-rede"],
              "query": [
                {
                  "key": "regiao",
                  "value": "sudeste"
                }
              ]
            },
            "description": "üåê Oportunidades por regi√£o"
          }
        }
      ]
    },
    {
      "name": "üõí Pedidos",
      "item": [
        {
          "name": "Gerar Pedido com Oportunidades",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cnpj_cliente\": \"12345678000123\",\n  \"vendedor_id\": 1,\n  \"itens_base\": [\n    {\n      \"codigo_produto\": \"12345\",\n      \"quantidade\": 10,\n      \"preco_unitario\": 25.90\n    }\n  ],\n  \"incluir_sugestoes\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/pedidos/gerar-com-oportunidades",
              "host": ["{{base_url}}"],
              "path": ["pedidos", "gerar-com-oportunidades"]
            },
            "description": "üéØ Gerar pedido com sugest√µes IA"
          }
        },
        {
          "name": "Criar Pedido",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cnpj_cliente\": \"12345678000123\",\n  \"vendedor_id\": 1,\n  \"itens\": [\n    {\n      \"codigo_produto\": \"12345\",\n      \"quantidade\": 5,\n      \"preco_unitario\": 25.90\n    }\n  ],\n  \"observacoes\": \"Pedido teste\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pedidos",
              "host": ["{{base_url}}"],
              "path": ["pedidos"]
            },
            "description": "üìù Criar novo pedido"
          }
        },
        {
          "name": "Buscar Pedido",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/pedidos/123",
              "host": ["{{base_url}}"],
              "path": ["pedidos", "123"]
            },
            "description": "üîç Buscar pedido por ID"
          }
        },
        {
          "name": "Atualizar Pedido",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cnpj_cliente\": \"12345678000123\",\n  \"vendedor_id\": 1,\n  \"itens\": [\n    {\n      \"codigo_produto\": \"12345\",\n      \"quantidade\": 8,\n      \"preco_unitario\": 25.90\n    }\n  ],\n  \"observacoes\": \"Pedido atualizado\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pedidos/123",
              "host": ["{{base_url}}"],
              "path": ["pedidos", "123"]
            },
            "description": "‚úèÔ∏è Atualizar pedido existente"
          }
        },
        {
          "name": "Confirmar Pedido",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/pedidos/123/confirmar",
              "host": ["{{base_url}}"],
              "path": ["pedidos", "123", "confirmar"]
            },
            "description": "‚úÖ Confirmar pedido"
          }
        },
        {
          "name": "Alterar Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"novo_status\": \"PROCESSANDO\",\n  \"observacao\": \"Iniciando processamento\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/pedidos/123/status",
              "host": ["{{base_url}}"],
              "path": ["pedidos", "123", "status"]
            },
            "description": "üîÑ Alterar status do pedido"
          }
        },
        {
          "name": "Marcar Item como Sugest√£o",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"item_id\": 456,\n  \"aceito\": true,\n  \"motivo_rejeicao\": null\n}"
            },
            "url": {
              "raw": "{{base_url}}/pedidos/123/items/marcar-sugestao",
              "host": ["{{base_url}}"],
              "path": ["pedidos", "123", "items", "marcar-sugestao"]
            },
            "description": "‚úÖ Tracking de sugest√µes aceitas/rejeitadas"
          }
        }
      ]
    },
    {
      "name": "üîç Debug & Monitoring",
      "item": [
        {
          "name": "Visualizar Logs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/debug/logs?linhas=50",
              "host": ["{{base_url}}"],
              "path": ["debug", "logs"],
              "query": [
                {
                  "key": "linhas",
                  "value": "50"
                }
              ]
            },
            "description": "üìã Ver logs do sistema"
          }
        },
        {
          "name": "Status Logging",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/debug/logs/status",
              "host": ["{{base_url}}"],
              "path": ["debug", "logs", "status"]
            },
            "description": "üìä Status do sistema de logs"
          }
        },
        {
          "name": "Debug Query (SEM AUTH)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/debug/query?data_inicio=2024-01-01&limite=5",
              "host": ["{{base_url}}"],
              "path": ["debug", "query"],
              "query": [
                {
                  "key": "data_inicio",
                  "value": "2024-01-01"
                },
                {
                  "key": "limite",
                  "value": "5"
                }
              ]
            },
            "description": "üîç Debug da query SQL principal (p√∫blico)"
          }
        }
      ]
    },
    {
      "name": "‚ù§Ô∏è Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "‚ù§Ô∏è Status da API e conex√µes com bancos"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Definir datas din√¢micas",
          "const now = new Date();",
          "const year = now.getFullYear();",
          "const month = String(now.getMonth() + 1).padStart(2, '0');",
          "const day = String(now.getDate()).padStart(2, '0');",
          "",
          "pm.collectionVariables.set('current_date', `${year}-${month}-${day}`);",
          "pm.collectionVariables.set('current_month_start', `${year}-${month}-01`);",
          "",
          "// Verificar token antes de requests autenticados",
          "const needsAuth = !pm.request.url.path.join('/').includes('health') &&",
          "                  !pm.request.url.path.join('/').includes('debug/query') &&",
          "                  !pm.request.url.path.join('/').includes('auth/login');",
          "",
          "if (needsAuth) {",
          "    const token = pm.collectionVariables.get('token') || pm.environment.get('token');",
          "    if (!token) {",
          "        console.warn('‚ö†Ô∏è Token n√£o encontrado! Execute Login primeiro.');",
          "    }",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Verificar erros de autentica√ß√£o",
          "if (pm.response.code === 401) {",
          "    console.error('‚ùå Token inv√°lido ou expirado! Execute Login novamente.');",
          "}",
          "",
          "// Log de resposta para debug",
          "if (pm.response.code >= 400) {",
          "    console.log('üö® Status:', pm.response.code);",
          "    console.log('üìÑ Response:', pm.response.text());",
          "} else {",
          "    console.log('‚úÖ Status:', pm.response.code, 'OK');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "current_date",
      "value": "",
      "type": "string"
    },
    {
      "key": "current_month_start",
      "value": "",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ]
}